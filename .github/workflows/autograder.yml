name: Correção

on:
  pull_request_target:
    types: [opened, synchronize]
  workflow_dispatch:
  

permissions:
  checks: write
  actions: read
  contents: read
  pull-requests: write

env:
  FILES_PATH: ${{ github.workspace }}

jobs:
  setup:
    name: Correção
    runs-on: [self-hosted, html]
    if: github.actor != 'github-classroom[bot]'
    steps:
      - name: Checkout 
        uses: actions/checkout@v2
  
      - name: Configuração das dependências
        run: npm --prefix ${{ github.workspace }}/.github/actions/html-elements install

      - name: Inicialização do servidor
        run: npm --prefix ${{ github.workspace }}/.github/actions/html-elements start &

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          project: ${{github.workspace}}
          browser: chrome
          # build: npm --prefix ${{ github.workspace }}/.github/actions/html-elements install
          # start: npm --prefix ${{ github.workspace }}/.github/actions/html-elements start
          wait-on: "http://localhost:8080"
          working-directory: ${{ github.workspace }}/.github/actions/html-elements
          config-file: cypress.config.js
      
      # - name: Report Full
      #   uses: dorny/test-reporter@v1
      #   if: always()
      #   with:
      #     name: Relatório da Correção                  # Name of the check run which will be created
      #     path: 'reports/*.xml'                     # Path to test results (inside artifact .zip)
      #     reporter: jest-junit              # Format of test results
      #     fail-on-error: false
      #     fail-on-empty: false

      - name: Report Summary
        id: reportSummary
        uses: test-summary/action@v2
        with:
          paths: "reports/**/*.xml"
          output: "reports/summary.md"
          show: "all"
        if: always()

      - name: Pull Request Comment
        uses: thollander/actions-comment-pull-request@v2
        with:
          filePath: "reports/summary.md"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: always()


# name: Correção

# on:
#   pull_request:
#     types: [synchronize, opened, reopened ]

# env:
#   FILES_PATH: ${{ github.workspace }}

# jobs:
#   setup:
#     name: Setup do projeto
#     runs-on: ubuntu-latest

#     steps: 
#       - name: Checkout do repositório
#         uses: actions/checkout@v2

#       - name: Preparação do ambiente
#         uses: actions/setup-node@v2
#         with:
#           node-version: 16.x

#       - name: Configuração das dependências
#         run: npm --prefix ${{ github.workspace }}/.github/actions/html-elements install

#       - name: Caching do projeto
#         uses: actions/cache@v2
#         with:
#           path: |
#             ${{ env.FILES_PATH }}/*.html
#             ${{ github.workspace }}/.github/actions/html-elements/
#           key: ${{ runner.os }}-${{ github.run_id }}  

#   grading-html-elements:
#     name: "Exercício: Elementos HTML"
#     needs: setup
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         task: [ "T1", "T2", "T3", "T4" ]


#     steps:
#       - name: Caching do projeto
#         uses: actions/cache@v2
#         with:
#           path: |
#             ${{ env.FILES_PATH }}/*.html
#             ${{ github.workspace }}/.github/actions/html-elements/
#           key: ${{ runner.os }}-${{ github.run_id }}  

#       - name: "${{ matrix.task }}"
#         if: ${{ always() }}
#         run: npm --prefix ${{ github.workspace }}/.github/actions/html-elements test -- -t "${{ matrix.task }}"
    